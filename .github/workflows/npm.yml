name: npm

on:
  workflow_dispatch:
  push:
    branches:
      - dev
  pull_request:
    types:
      - closed
    branches:
      - dev
      - '!master'


env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  PROCESS_COUNT: 1

jobs:
  docker-build-dev:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - run:  npm install --package-lock-only

      - uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Import Secrets
        id: secrets
        uses: hashicorp/vault-action@v2
        with:
          url: ${{ secrets.RC_VAULT_URL }}
          token: ${{ secrets.RC_VAULT_TOKEN_DEV }}
          secrets: |
            dev/data/variable GTM_ID | GTM_ID ;
            dev/data/variable SLACK_WEBHOOK_ROLLER_ERROR | SLACK_WEBHOOK_ROLLER_ERROR ;

      - name: Set config file
        run: |-
          rm ./src/config/.env.production
          mv ./src/config/.env.development ./src/config/.env.production
          cd config/
          mv development.json default.json
          rm production.json
          sed -i 's|GTM_ID|${{ steps.secrets.outputs.GTM_ID }}|g' default.json
          sed -i 's|SLACK_WEBHOOK_ROLLER_ERROR|${{ steps.secrets.outputs.SLACK_WEBHOOK_ROLLER_ERROR }}|g' default.json
          cat default.json

      - name: Replace max process in ecosystem.js
        run: |-
          sed -i 's/instances: "max"/instances: "${{ env.PROCESS_COUNT }}"/g' ecosystem.config.js

      - name: Get Hash
        id: hash
        run: echo "git_hash=$(git rev-parse --short "$GITHUB_SHA")" >> $GITHUB_ENV

      - run: npm install

      - run: npm run build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GIT_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: build and push image
        uses: docker/build-push-action@v4
        with:
          context: Dockerfile_npm
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
